name: Deploy React.js to AWS S3

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set CI variable to false
        run: echo "CI=false" >> $GITHUB_ENV

      - name: Print Environment Variables
        run: |
          env

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'  #  Adjust to the desired Node.js version

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Run SonarCloud Scan
        uses:  SonarSource/sonarcloud-github-action@master
        with:
          args: |
            -Dsonar.projectKey=e1327906_sqrts-frontend
            -Dsonar.organization=e1327906
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload to  S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read-write
        env:
          SOURCE_DIR: build/
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}  #update the bucket name to sqrt-web-app
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  snyk:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true #  To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif